import React, { useState, useEffect, useRef } from "react";
import { NavLink, useLocation } from "react-router-dom"; 
import "./../styles/Login.css";
import { useNavigate } from "react-router-dom";

const Login = () => {
  const underlineRef = useRef(null); // ‡πÉ‡∏ä‡πâ useRef ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° underline
  const navRef = useRef(null); // ‡πÉ‡∏ä‡πâ ref ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° parent ‡∏Ç‡∏≠‡∏á NavLink
  const location = useLocation(); // ‡πÉ‡∏ä‡πâ location ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° URL ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
  const [showPassword, setShowPassword] = useState(false);
  const navigate = useNavigate();

  useEffect(() => {
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà active ‡∏≠‡∏¢‡∏π‡πà
    const activeLink = document.querySelector(".nav-links .active-link");
    if (activeLink && underlineRef.current) {
      const { offsetLeft, offsetWidth } = activeLink;
      // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á left ‡πÅ‡∏•‡∏∞ width ‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏µ‡∏î‡πÉ‡∏ï‡πâ
      underlineRef.current.style.left = `${offsetLeft}px`;
      underlineRef.current.style.width = `${offsetWidth}px`;
    }
  }, [location.pathname]); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà URL ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô

  const handleSubmit = (e) => {
    e.preventDefault();
    navigate("/"); 
  };

  return (
    <div className="login-container">
      <div className="login-box">
        <div className="login-header">
          <h2 className="nav-links" ref={navRef}>
            <NavLink to="/login" className={({ isActive }) => (isActive ? "active-link" : "link")}>
              ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
            </NavLink>
            &nbsp;|&nbsp;
            <NavLink to="/register" className={({ isActive }) => (isActive ? "active-link" : "link")}>
              ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
            </NavLink>
            {/* ‡πÄ‡∏™‡πâ‡∏ô underline ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏Ç‡∏¢‡∏±‡∏ö‡∏ï‡∏≤‡∏° active link */}
            <div className="nav-underline" ref={underlineRef}></div>
          </h2>
        </div>

        <h1 className="logo">JC <span>University</span></h1>

        <form className="login-form" onSubmit={handleSubmit}>
          <div className="form-group">
            <label>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</label>
            <input type="email" placeholder="aaa@gmail.com" required />
          </div>
          <div className="form-group">
            <label>‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
            <div className="password-field">
              <input type={showPassword ? "text" : "password"} placeholder="*************" required />
              <span className="toggle-password" onClick={() => setShowPassword(!showPassword)}>
                {showPassword ? "üôà" : "üëÅÔ∏è"}
              </span>
            </div>
          </div>
          <button type="submit" className="login-button" onClick={handleSubmit}>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</button>
        </form>
      </div>
    </div>
  );
};

export default Login;
